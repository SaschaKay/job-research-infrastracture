
services:
  init_shared_config:
    image: busybox
    volumes:
      - /opt/docker/shared_config:${SHARED_CONFIG}
    command: >
      sh -c "mkdir -p ${SHARED_CONFIG} &&
             chown -R root:9999 ${SHARED_CONFIG} && #9999 - sharedconfig group
             chmod -R 750 ${SHARED_CONFIG}" #rwx for root and, rx for sharedconfig, nothing for others

  jupyter:
    build:
      context: .
      dockerfile: Dockerfile-Jupyter
    container_name: jupyter
    restart: unless-stopped
    depends_on:
      - init_shared_config
    environment:
      JUPYTER_ENABLE_LAB: yes
      GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS}
    ports:
      - "8888:8888" 
      - "8889:8889"
      - "5000:5000"  
    volumes:
      - jupyter_data:/home/jovyan/work
      - /opt/docker/shared_config:${SHARED_CONFIG}
    command: start-notebook.sh --NotebookApp.token=''

  postgres:
    image: postgres:17.4-bookworm
    container_name: postgres
    restart: always
    environment:
      PGUSER: ${POSTGRES_USER}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: 
        [
          "CMD-SHELL", 
          "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" 
        ]
      interval: 5s                             
      timeout: 5s                              
      retries: 5   

  pgadmin:
    image: dpage/pgadmin4@sha256:bdebdfc4b165c10d0ad60e58f1d7ef41af6c881c9556ae331adaa35bba6dacf3 #dpage/pgadmin4:latest 03.07.2025
    container_name: pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports: 
      - "5055:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy

  init-airflow:
    build: 
      dockerfile: Dockerfile-Airflow
    container_name: init-airflow 
    user: root
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: ${AIRFLOW__DATABASE__SQL_ALCHEMY_CONN}
    command: >
      bash -c "
      until pg_isready -h postgres -U airflow; do
        echo 'Waiting for PostgreSQL to be ready...';
        sleep 2;
      done;
      airflow db migrate && airflow connections create-default-connections &&
      airflow users create -r Admin -u admin -p admin -e admin@example.com -f admin -l airflow &&
      airflow users create -r Admin -u airflow -p airflow -e airflow@example.com -f airflow -l airflow &&
      echo 'Initialization complete' &&
      touch /opt/airflow/shared/initialized
      "
    healthcheck:
        test: ["CMD-SHELL", "airflow db check && echo 'Database ready!'"]
        interval: 10s
        timeout: 10s
        retries: 5
        start_period: 10s   
    volumes:
        - airflow_shared_data:/opt/airflow/shared          

  scheduler:
    build: 
      dockerfile: Dockerfile-Airflow
    container_name: airflow-sheduler
    command: >
        bash -c "
        until [ -f /opt/airflow/shared/initialized ]; do
            echo 'Waiting for init-airflow to complete...';
            sleep 2;
        done;
        airflow scheduler
        "
    depends_on:
        - postgres
        - init-airflow
        - init_shared_config
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: ${AIRFLOW__DATABASE__SQL_ALCHEMY_CONN}
      AIRFLOW_UID: 50000
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__SCHEDULER__SCHEDULER_HEARTBEAT_SEC: 10
      AIRFLOW_CONN_METADATA_DB: ${AIRFLOW__DATABASE__SQL_ALCHEMY_CONN}
      AIRFLOW_VAR__METADATA_DB_SCHEMA: ${POSTGRES_DB}
      _AIRFLOW_WWW_USER_CREATE: True
      _AIRFLOW_WWW_USER_USERNAME: ${POSTGRES_USER}
      _AIRFLOW_WWW_USER_PASSWORD: ${POSTGRES_PASSWORD}
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: True
      AIRFLOW__CORE__LOAD_EXAMPLES: False   
      GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS}    
    volumes:
      - /opt/docker/airflow/dags:/opt/airflow/dags
      - /opt/docker/airflow/logs:/opt/airflow/logs
      - /opt/docker/airflow/google:/opt/airflow/google:ro
      - airflow_shared_data:/opt/airflow/shared
      - /opt/docker/shared_config:${SHARED_CONFIG}

  webserver:
    build: 
      dockerfile: Dockerfile-Airflow
    container_name: airflow-webserver
    command: >
        bash -c "
        until [ -f /opt/airflow/shared/initialized ]; do
            echo 'Waiting for init-airflow to complete...';
            sleep 2;
        done;
        airflow webserver
        "
    depends_on:
        - postgres
        - init-airflow
        - scheduler
        - init_shared_config
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: ${AIRFLOW__DATABASE__SQL_ALCHEMY_CONN}
      AIRFLOW_UID: 50000
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__SCHEDULER__SCHEDULER_HEARTBEAT_SEC: 10
      AIRFLOW_CONN_METADATA_DB: ${AIRFLOW__DATABASE__SQL_ALCHEMY_CONN}
      AIRFLOW_VAR__METADATA_DB_SCHEMA: ${POSTGRES_DB}
      _AIRFLOW_WWW_USER_CREATE: True
      _AIRFLOW_WWW_USER_USERNAME: ${POSTGRES_USER}
      _AIRFLOW_WWW_USER_PASSWORD: ${POSTGRES_PASSWORD}
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: True
      AIRFLOW__CORE__LOAD_EXAMPLES: False   
    volumes:
      - /opt/docker/airflow/dags:/opt/airflow/dags
      - /opt/docker/airflow/logs:/opt/airflow/logs
      - /opt/docker/airflow/google:/opt/airflow/google:ro
      - airflow_shared_data:/opt/airflow/shared
      - /opt/docker/shared_config:${SHARED_CONFIG}              

    user: "50000:0"
    ports:
        - "8080:8080"
    healthcheck:
        test: [ "CMD-SHELL", "[ -f /home/airflow/airflow-webserver.pid ]" ]
        interval: 30s
        timeout: 30s
        retries: 3

volumes:
  postgres_data:
  pgadmin_data:
  jupyter_data:
  airflow_shared_data:

